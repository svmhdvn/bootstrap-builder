#!/bin/sh
set -ex

to_kernconf() {
    awk '{printf("MY%s\n", toupper($1))}'
}

sync_confs() {
    _host="$1"

    _hostdir="hosts/$_host"
    _kernconf="$(echo "$_host" | to_kernconf)"

    cp "$_hostdir/$_host-common-make.conf" "$poudriere_etc/$_host-make.conf"
    cp "$_hostdir/$_host-portoptions-make.conf" "$poudriere_etc/$ports_tree-$_host-make.conf"
    cp \
    	"$_hostdir/$_host-src.conf" \
    	"$_hostdir/$_host-src-env.conf" \
	"$poudriere_etc"

    grep '^[a-z]' "$_hostdir/${_kernconf}_LINT" \
    	| sort -u \
    	| tee \
            "$_hostdir/$_kernconf" \
            "/usr/src/sys/$target_arch/conf/$_kernconf" \
            > /dev/null
}

# TODO find a cleaner way to do this
# Instructions from https://wiki.freebsd.org/PkgBase
post_pkgbase_upgrade() {
    if test -r /etc/master.passwd.pkgsave || test -r /etc/group.pkgsave ; then
        cp /etc/master.passwd.pkgsave /etc/master.passwd || true
        cp /etc/group.pkgsave /etc/group || true
        pwd_mkdb -p /etc/master.passwd
    fi
    cp /etc/sysctl.conf.pkgsave /etc/sysctl.conf || true

    find / -name '*.pkgsave' | \
    	awk 'BEGIN {print "Leftover .pkgsave files (delete after double checking):"}' | \
    	less
    rm -f /boot/kernel/linker.hints
}

build_pkgbase_jail() {
    _host="$1"
    _kernconf="$(echo "$_host" | to_kernconf)"
    _jail="poudriere_stable${freebsd_version}_${_kernconf}"

    if test ! -d /usr/src/.git; then
        git clone \
            --origin upstream \
            --depth 1 \
            --branch "stable/$freebsd_version" \
            https://git.freebsd.org/src.git /usr/src
    fi
    git -C /usr/src pull upstream "stable/$freebsd_version" --rebase --autostash

    sync_confs "$_host"
    if poudriere jail -l -n -q | grep -q "^${_jail}\$"; then
        poudriere jail -u -j "$_jail" -b -z "$_host"
    else
        poudriere jail -c -j "$_jail" -b -m src=/usr/src -B -K "$_kernconf" -z "$_host"
    fi
}

build_ports() {
    _host="$1"

    if test ! -d /usr/ports/.git; then
        git clone \
            --origin upstream \
            --depth 1 \
            https://git.freebsd.org/ports.git /usr/ports
        poudriere ports -c -m null -M /usr/ports
    fi
    git -C /usr/ports pull upstream main --autostash --rebase

    case "$_host" in
      beastie)
        _pkglist=pkglist-builder.txt
        ;;
      cl100*|wyse*)
        _pkglist=pkglist-empt.txt
        ;;
      *)
        echo "unsupported target host: $_host" >&2
        echo "usage: $0 <command> <hostname>" >&2
        exit 1
    esac

    sync_confs "$_host"
    if test ! -d "$poudriere_portoptions" && test -d "$my_portoptions"; then
        cp -R "$my_portoptions" "$poudriere_portoptions"
    fi
    poudriere options -j "$builder_jail" -f "$_pkglist" -z "$_host"
    rm -rf "$my_portoptions"
    cp -R "$poudriere_portoptions" "$my_portoptions"

    poudriere bulk -j "$builder_jail" -f "$_pkglist" -z "$_host"
}

bootstrap_step1() {
    # NOTES:
    # Must run with the following conditions:
    # * as root (with doas is fine)
    # * on a freshly-installed FreeBSD 14.0-RELEASE system
    # * inside the git repo
    #
    # REQUIRED PKGS BEFORE BOOTSTRAP:
    # * doas (configured with 'permit nopass :wheel')

    # 1) install required packages from upstream mirror
    pkg install -y git poudriere ccache

    # 2) setup poudriere
    # TODO change ccache directory to a better global location, possibly /var/cache/ccache
    # NOTE add back if needed to the sed command:
    #   -e 's/.*TMPFS_BLACKLIST=.*/TMPFS_BLACKLIST="ghc* llvm* rust*"/' \
    #   -e 's%.*TMPFS_BLACKLIST_TMPDIR=.*%TMPFS_BLACKLIST_TMPDIR="${BASEFS}/data/cache/tmp"%' \
    sed \
    	-e "s/.*BUILDER_HOSTNAME=.*/BUILDER_HOSTNAME=poudriere.home.arpa/" \
    	-e 's/.*ALLOW_MAKE_JOBS_PACKAGES=.*/ALLOW_MAKE_JOBS_PACKAGES="pkg ccache rust* llvm* gcc* python* cmake*"/' \
    	-e 's/.*BAD_PKGNAME_DEPS_ARE_FATAL=.*/BAD_PKGNAME_DEPS_ARE_FATAL=yes/' \
    	-e 's%.*CCACHE_DIR=.*%CCACHE_DIR=/root/.ccache%' \
    	-e 's/.*NOLINUX=.*/NOLINUX=yes/' \
    	-e 's/.*WRKDIR_ARCHIVE_FORMAT=.*/WRKDIR_ARCHIVE_FORMAT=tzst/' \
    	-e 's/.*ZPOOL=.*/ZPOOL=zroot/' \
    	/usr/local/etc/poudriere.conf.sample > /usr/local/etc/poudriere.conf

    # 3) build system pkgbase
    kldload -n filemon
    build_pkgbase_jail "$builder_hostname"

    # 4) convert system into a pkgbase installation
    mkdir -p /usr/local/etc/pkg/repos

    # TODO handle signatures
    cat > /usr/local/etc/pkg/repos/poudriere_pkgbase.conf <<EOF
${pkgbase_repo_name}: {
  url: "file://${pkgbase_repo}"
  enabled: yes
}
EOF

    pkg install -r "$pkgbase_repo_name" -g 'FreeBSD-*' -y
    post_pkgbase_upgrade
}

bootstrap_step2() {
    # 5) build ports
    mkdir -p /usr/ports/distfiles
    build_ports "$builder_hostname"

    # 6) reinstall all system pkgs with the new poudriere repo
    cat <<EOF > /usr/local/etc/pkg/repos/poudriere_ports.conf
${ports_repo_name}: {
  url: "file://$ports_repo"
  enabled: yes
}
EOF

    cat <<EOF > /usr/local/etc/pkg/repos/FreeBSD.conf
FreeBSD: {
  url: "pkg+https://pkg.freebsd.org/$${ABI}/latest",
  mirror_type: "srv",
  signature_type: "fingerprints",
  fingerprints: "/usr/share/keys/pkg",
  enabled: "no"
}
EOF
    pkg upgrade -y
}

freebsd_version=14
readonly freebsd_version

# TODO support other architectures when the need arises
target_arch=amd64
readonly target_arch

builder_hostname="$(hostname)"
readonly builder_hostname

# NOTE use this to determine a system's CPUTYPE, then add it to a make.conf
# inside the hosts/ directory
#cputype="$(cc -v -x c -E -march=native /dev/null 2>&1 | sed -n 's/.*-target-cpu *\([^ ]*\).*/\1/p')"

poudriere_etc=/usr/local/etc/poudriere.d
readonly poudriere_etc

poudriere_data=/usr/local/poudriere/data
readonly poudriere_data

pkgbase_repo_name=PoudrierePkgbase
readonly pkgbase_repo_name

ports_repo_name=PoudrierePorts
readonly ports_repo_name

# TODO change to a more descriptive name, like "empt_ports" or something
ports_tree=default
readonly ports_tree

# NOTE set to GENERIC for recovery or hardware testing
builder_kernconf="$(echo "$builder_hostname" | to_kernconf)"
readonly builder_kernconf

builder_jail="poudriere_stable${freebsd_version}_${builder_kernconf}"
readonly builder_jail

if test "$2" = ""; then
target_hostname="$builder_hostname"
else
target_hostname="$2"
fi
readonly target_hostname

target_kernconf="$(echo "$target_hostname" | to_kernconf)"
readonly target_kernconf

target_pkgbase_jail="poudriere_stable${freebsd_version}_${target_kernconf}"
readonly target_pkgbase_jail

pkgbase_repo="$poudriere_data/images/$target_pkgbase_jail-repo/FreeBSD:$freebsd_version:$target_arch/latest"
readonly pkgbase_repo

ports_repo="$poudriere_data/packages/$builder_jail-$ports_tree-$target_hostname"
readonly ports_repo

poudriere_portoptions="$poudriere_etc/$builder_jail-$target_hostname-options"
readonly poudriere_portoptions

my_portoptions="hosts/$target_hostname/portoptions"
readonly my_portoptions

case "$1" in
  bootstrap1)
    bootstrap_step1
    ;;
  bootstrap2)
    bootstrap_step2
    ;;
  upgrade1)
    build_pkgbase_jail "$builder_hostname"
    pkg upgrade -r "$pkgbase_repo_name" -y
    post_pkgbase_upgrade
    ;;
  upgrade2)
    build_ports "$builder_hostname"
    pkg upgrade -r "$ports_repo_name" -y
    ;;
  pkgbase)
    build_pkgbase_jail "$target_hostname"
    ;;
  ports)
    build_ports "$target_hostname"
    ;;
  tarballs)
    mkdir -p tarballs
    tar --zstd --strip-components 9 -cvHf "tarballs/${target_hostname}-${pkgbase_repo_name}.tar.zst" "$pkgbase_repo"
    tar --zstd --strip-components 7 -cvf "tarballs/${target_hostname}-${ports_repo_name}.tar.zst" "$ports_repo"
    ;;
  destroy)
    poudriere jail -d -j "$target_pkgbase_jail" -C all -y || true
    rm -f \
        "$poudriere_etc/$target_hostname"-*.conf \
        "$poudriere_etc/$ports_tree-$target_hostname"-*.conf
    rm -rf \
        "$poudriere_portoptions" \
        "$pkgbase_repo" \
        "$ports_repo"
    rm -f tarballs/"$target_hostname"-Poudriere*.tar.zst
    ;;
  *)
    echo "unsupported command: $1" >&2
    exit 1
esac
