#!/bin/sh
set -ex

to_kernconf() {
    awk '{printf("MY%s\n", toupper($1))}'
}

sync_confs() {
    _host="$1"

    _hostdir=hosts/"$_host"
    _kernconf="$(echo "$_host" | to_kernconf)"
    _optionsdir="$BUILDER_JAIL"-default-"$_host"-options

    cp "$_hostdir"/"$_host"-common-make.conf "$poudriere_etc"/"$_host"-make.conf
    cp "$_hostdir"/"$_host"-portoptions-make.conf "$poudriere_etc"/default-"$_host"-make.conf
    cp \
    	"$_hostdir"/"$_host"-src.conf \
    	"$_hostdir"/"$_host"-src-env.conf \
	"$poudriere_etc"

    grep '^[a-z]' "$_hostdir"/"$_host"_LINT \
    	| sort -u \
    	| tee \
            "$_hostdir"/"$_kernconf" \
            /usr/src/sys/"$(uname -p)"/conf/"$_kernconf" \
            > /dev/null
}

# TODO find a cleaner way to do this
# Instructions from https://wiki.freebsd.org/PkgBase
post_pkgbase_upgrade() {
    if test -r /etc/master.passwd.pkgsave || test -r /etc/group.pkgsave ; then
        cp /etc/master.passwd.pkgsave /etc/master.passwd || true
        cp /etc/group.pkgsave /etc/group || true
        pwd_mkdb -p /etc/master.passwd
    fi
    cp /etc/sysctl.conf.pkgsave /etc/sysctl.conf || true
    find / -name '*.pkgsave' -delete
    rm -f /boot/kernel/linker.hints
}

build_pkgbase_jail() {
    _host="$1"
    _kernconf="$(echo "$_host" | to_kernconf)"
    _jail="poudriere_stable${FREEBSD_VERSION}_${_kernconf}"

    if test ! -d /usr/src/.git; then
        git clone \
            --origin upstream \
            --depth 1 \
            --branch "stable/$FREEBSD_VERSION" \
            https://git.freebsd.org/src.git /usr/src
    fi
    git -C /usr/src pull upstream "stable/$FREEBSD_VERSION" --rebase --autostash

    sync_confs "$_host"
    if poudriere jail -l -n -q | grep -q "^${_jail}$$"; then
        poudriere jail -u -j "$_jail" -b -z "$_host"
    else
        poudriere jail -c -j "$_jail" -b -m src=/usr/src -B -K "$_kernconf" -z "$_host"
    fi
}

build_ports() {
    _host="$1"

    if test ! -d /usr/ports/.git; then
        git clone \
            --origin upstream
            --depth 1
            https://git.freebsd.org/ports.git /usr/ports
        poudriere ports -c -m null -M /usr/ports
    fi
    git -C /usr/ports pull upstream main --autostash --rebase

    case "$TARGET_HOSTNAME" in
      beastie)
        _pkglist=pkglist-builder.txt
        ;;
      cl100*|wyse*)
        _pkglist=pkglist-empt.txt
        ;;
      *)
        echo "unsupported target host: $TARGET_HOSTNAME" >&2
        echo "usage: $0 <command> <hostname>" >&2
        exit 1
    esac

    sync_confs "$_host"
    poudriere options -j "$builder_jail" -f "$_pkglist" -z "$_host"
    poudriere bulk -j "$builder_jail" -f "$_pkglist" -z "$_host"
}

bootstrap_step1() {
    # NOTES:
    # Must run with the following conditions:
    # * as root (with doas is fine)
    # * on a freshly-installed FreeBSD 14.0-RELEASE system
    # * inside the git repo
    #
    # REQUIRED PKGS BEFORE BOOTSTRAP:
    # * doas (configured with 'permit nopass :wheel')

    # 1) install required packages from upstream mirror
    pkg install -y git poudriere ccache

    # 2) setup poudriere
    # TODO change ccache directory to a better global location, possibly /var/cache/ccache
    # NOTE add back if needed to the sed command:
    #   -e 's/.*TMPFS_BLACKLIST=.*/TMPFS_BLACKLIST="ghc* llvm* rust*"/' \
    #   -e 's%.*TMPFS_BLACKLIST_TMPDIR=.*%TMPFS_BLACKLIST_TMPDIR="${BASEFS}/data/cache/tmp"%' \
    sed \
    	-e "s/.*BUILDER_HOSTNAME=.*/BUILDER_HOSTNAME=poudriere.home.arpa/" \
    	-e 's/.*ALLOW_MAKE_JOBS_PACKAGES=.*/ALLOW_MAKE_JOBS_PACKAGES="pkg ccache rust* llvm* gcc* python* cmake*"/' \
    	-e 's/.*BAD_PKGNAME_DEPS_ARE_FATAL=.*/BAD_PKGNAME_DEPS_ARE_FATAL=yes/' \
    	-e 's%.*CCACHE_DIR=.*%CCACHE_DIR=/root/.ccache%' \
    	-e 's/.*NOLINUX=.*/NOLINUX=yes/' \
    	-e 's/.*WRKDIR_ARCHIVE_FORMAT=.*/WRKDIR_ARCHIVE_FORMAT=tzst/' \
    	-e 's/.*ZPOOL=.*/ZPOOL=zroot/' \
    	/usr/local/etc/poudriere.conf.sample > /usr/local/etc/poudriere.conf

    # 3) build system pkgbase
    kldload -n filemon
    build_pkgbase_jail "$builder_hostname"

    # 4) convert system into a pkgbase installation
    mkdir -p /usr/local/etc/pkg/repos

    # TODO handle signatures
    cat > /usr/local/etc/pkg/repos/poudriere_pkgbase.conf <<EOF
${PKGBASE_REPO_NAME}: {
  url: "file://${PKGBASE_REPO}"
  enabled: yes
}
EOF

    pkg install -r "$PKGBASE_REPO_NAME" -g 'FreeBSD-*' -y
    post_pkgbase_upgrade
}

bootstrap_step2() {
    # 5) build ports
    mkdir -p /usr/ports/distfiles
    cp -R "$BACKUP_DIR" "$OPTIONS_DIR"
    build_ports "$builder_hostname"

    # 6) reinstall all system pkgs with the new poudriere repo
    cat <<EOF > /usr/local/etc/pkg/repos/poudriere_ports.conf
${PORTS_REPO_NAME}: {
  url: "file://$PORTS_REPO"
  enabled: yes
}
EOF

    cat <<EOF > /usr/local/etc/pkg/repos/FreeBSD.conf
FreeBSD: {
  url: "pkg+https://pkg.freebsd.org/$${ABI}/latest",
  mirror_type: "srv",
  signature_type: "fingerprints",
  fingerprints: "/usr/share/keys/pkg",
  enabled: "no"
}
EOF
    pkg upgrade -y
}


readonly builder_hostname="$(hostname)"
readonly target_hostname="$2"

# NOTE set either of these to GENERIC for recovery or hardware testing
readonly builder_kernconf="$(echo $builder_hostname | to_kernconf)"
readonly target_kernconf="$(echo "$TARGET_HOSTNAME" | to_kernconf)"

readonly freebsd_version=14
readonly builder_jail="poudriere_stable${freebsd_version}_$builder_kernconf"
readonly target_pkgbase_jail="poudriere_stable${FREEBSD_VERSION}_$target_kernconf"

readonly pkgbase_repo="/usr/local/poudriere/data/images/$target_pkgbase_jail-repo/FreeBSD:$freebsd_version:$(uname -p)/latest"
readonly pkgbase_repo_name=PoudrierePkgbase

readonly ports_repo="/usr/local/poudriere/data/packages/$builder_jail-default-$target_hostname"
readonly ports_repo_name=PoudrierePorts

readonly options_dir="${BUILDER_JAIL}-default-${TARGET_HOSTNAME}-options"

readonly poudriere_etc=/usr/local/etc/poudriere.d

# NOTE use this to determine a system's CPUTYPE, then add it to a make.conf
# inside the hosts/ directory
#readonly cputype="$(cc -v -x c -E -march=native /dev/null 2>&1 | sed -n 's/.*-target-cpu *\([^ ]*\).*/\1/p')"

case "$1" in
  bootstrap1)
    bootstrap_step1
    ;;
  bootstrap2)
    bootstrap_step2
    ;;
  upgrade1)
    build_pkgbase_jail "$builder_hostname"
    pkg upgrade -r "$PKGBASE_REPO_NAME" -y
    post_pkgbase_upgrade
    ;;
  upgrade2)
    build_ports "$builder_hostname"
    pkg upgrade -r "$PORTS_REPO_NAME" -y
    ;;
  pkgbase)
    build_pkgbase_jail "$TARGET_HOSTNAME"
    ;;
  ports)
    build_ports "$TARGET_HOSTNAME"
    ;;
  tarballs)
    mkdir -p tarballs
    tar --zstd --strip-components 9 -cvHf "tarballs/${TARGET_HOSTNAME}-${PKGBASE_REPO_NAME}.tar.zst" "$PKGBASE_REPO"
    tar --zstd --strip-components 7 -cvf "tarballs/${TARGET_HOSTNAME}-${PORTS_REPO_NAME}.tar.zst" "$PORTS_REPO"
    ;;
  destroy)
    poudriere jail -d -j "${TARGET_PKGBASE_JAIL}" -C all -y || true
    rm -f /usr/local/etc/poudriere.d/*"${TARGET_HOSTNAME}"*.conf
    rm -rf /usr/local/poudriere/data/images/"${TARGET_PKGBASE_JAIL}"-repo
    rm -f tarballs/"$TARGET_HOSTNAME"*.tar.zst
    ;;
  *)
    echo "unsupported command: $1" >&2
    exit 1
esac
